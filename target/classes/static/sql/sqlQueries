show databases;

use studentdb;

CREATE TABLE students (
    student_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    phone varchar(11),
    sem INT NOT null,
    department_id bigint,
    FOREIGN KEY (department_id) REFERENCES departments(department_id) ON DELETE cascade
);


alter table students add constraint FOREIGN KEY (departmentid) REFERENCES departments(department_id) ON DELETE cascade;

CREATE TABLE teachers (
    teacher_id BIGINT AUTO_INCREMENT PRIMARY KEY,  -- Auto-incremented primary key
    name VARCHAR(255) NOT NULL,                   -- Teacher's name (nullable = false)
    designation VARCHAR(255),                     -- Teacher's designation
    assigned_classes VARCHAR(255),                -- Classes assigned to the teacher
    subjects VARCHAR(255),                        -- Subjects the teacher teaches
    email VARCHAR(255) NOT NULL,                  -- Teacher's email (nullable = false)
    password VARCHAR(255),                        -- Teacher's password
    phone INT NOT NULL,                           -- Teacher's phone number (nullable = false)
    UNIQUE (email)                                -- Ensure email is unique

);

alter table teachers add constraint fkdp FOREIGN KEY (department_id) REFERENCES departments(department_id) ON DELETE cascade;;

alter table teachers add column phone varchar(11) after password;

CREATE TABLE departments (
    department_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    description TEXT,
    head_of_department VARCHAR(255)  -- Optional, to store the name of the head of the department
);


CREATE TABLE courses (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    course_code VARCHAR(50) UNIQUE NOT NULL,
    course_name VARCHAR(255) NOT NULL,
    description TEXT,
    department_id BIGINT NOT NULL,
    credits INT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    teacher_id BIGINT NOT NULL,
    FOREIGN KEY (department_id) REFERENCES departments(department_id) ON DELETE CASCADE,
    FOREIGN KEY (teacher_id) REFERENCES teachers(teacher_id) ON DELETE CASCADE
);

alter table courses add column fees int;

update courses  set fees = 60000 where course_code = 'PHY101';



INSERT INTO courses (course_code, course_name, description, department_id, credits, start_date, end_date, teacher_id) VALUES
('CS101', 'Introduction to Programming', 'Learn the basics of programming.', 1, 3, '2025-02-01', '2025-06-01', 1),
('CS102', 'Data Structures', 'Understanding data structures.', 1, 4, '2025-03-01', '2025-07-01', 2),
('MATH101', 'Calculus I', 'Introduction to calculus.', 2, 4, '2025-02-15', '2025-06-15', 3),
('PHY101', 'Physics Fundamentals', 'Basic physics concepts.', 3, 3, '2025-04-01', '2025-08-01', 1); -- No teacher assigned

INSERT INTO teachers (teacher_id, name, designation, department, assigned_classes, subjects, email, password, phone, department_id) VALUES
(2, 'Jane Smith','teacher', 'Computer Science', '11', 'java', 'janesmith@example.com', 'iamjane', 23456342,2),
(3, 'Emily Brown', 'HOD', 'Physics', '12', 'Speed', 'emilybrown@example.com', 'iamemily', 45356236,3);


INSERT INTO departments (name, description, head_of_department) VALUES
('Computer Science', 'Focuses on computing, programming, and information technology.', 'Dr. John Doe'),
('Mathematics', 'Deals with numbers, quantities, and theories.', 'Dr. Jane Smith'),
('Physics', 'Studies matter, energy, and the fundamental forces.', 'Dr. Alan Watts');


update teachers set subjects = "Speed"  where teacher_id = 1;

update students set department_id = 1 where sem <> 1;

alter table students drop column department_id;

show tables;

delete from students;

select * from students;
select * from teachers;
select * from departments;
select * from courses;

desc departments ;



drop table students;

desc students;