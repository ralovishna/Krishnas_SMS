package com.StudentMS.controller;

import com.StudentMS.entity.User;
import com.StudentMS.service.StudentService;
import com.StudentMS.service.TeacherService;
import com.StudentMS.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;

@Controller
public class ProfileController {

    @Autowired
    private UserService userService;

    @Autowired
    private StudentService studentService;

    @Autowired
    private TeacherService teacherService;

    @GetMapping("/profile")
    public String getProfile(Model model) {
        User user = userService.getCurrentUser();

        if (user == null) {
            return "redirect:/login";
        }

        model.addAttribute("user", user);

        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
        if (authentication != null && authentication.isAuthenticated()) {
            authentication.getAuthorities().forEach(authority -> {
                switch (authority.getAuthority()) {
                    case "ROLE_TEACHER":
                        teacherService.findByUserId(user.getId()).ifPresent(teacher -> model.addAttribute("teacher", teacher));
                        break;
                    case "ROLE_STUDENT":
                        studentService.findByUserId(user.getId()).ifPresent(student -> model.addAttribute("student", student));
                        break;
                    default:
                        // Handle other roles or do nothing
                        break;
                }
            });
        }
        return "Profile";
    }
}